{"mappings":"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","sources":["src/index.ts"],"sourcesContent":["//Get elements\nconst body = document.getElementById(\"body\") as HTMLBodyElement;\nconst header = document.getElementById(\"header\") as HTMLElement | null;\nconst loginfield = document.getElementById(\"login\")as HTMLButtonElement | null;\nconst form = document.getElementById(\"form\") as HTMLFormElement | null;\nconst usernameInput = document.getElementById(\"username\") as HTMLInputElement | null;\nconst passwordInput = document.getElementById(\"password\") as HTMLInputElement | null;\nconst imageSelection = document.getElementById(\"image-selection\") as HTMLSelectElement | null;\nconst createAccountButton = document.getElementById(\"create-account-button\") as HTMLButtonElement | null;\nconst logInButton = document.getElementById(\"log-in-button\") as HTMLButtonElement | null;\nconst loggedInUsersList = document.getElementById(\"logged-in-users\") as HTMLUListElement | null;\n\nconst baseUrl = \"https://slutprojekt-social-media-default-rtdb.europe-west1.firebasedatabase.app/\";\n//create elements\nconst errorMessage = document.createElement(\"p\");\nconst userDeletedSuccessfully = document.createElement(\"h1\");\nconst failedToDeleteUser = document.createElement(\"h1\");\nconst statusInput = document.createElement(\"input\");\nconst listItem = document.createElement(\"li\");\nconst accountCreated = document.createElement(\"h2\");\nbody.appendChild(accountCreated);\nconst logInpage = document.createElement('div');\ndocument.body.appendChild(logInpage);\nlet loggedInUser = null; \n\n\n// Define the interfaces\ninterface UserInfo {\n    userName: any;\n    password: string;\n    status: string;\n    imageurl: string;\n    newUser: boolean;\n    createdAt: string\n}\n\ninterface FirebaseResponse {\n    [key: string]: UserInfo;\n}\n\n//uppdate and save users \nasync function saveUser(user: UserInfo): Promise<void> {\n\n    const arrData = await getUsers();\n\n    const url = `${baseUrl}users/${user.userName}.json`;\n    const init = {\n        method: \"PUT\",\n        body: JSON.stringify(user),\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n    };\n\n    try {\n        const response = await fetch(url, init);\n\n        if (!response.ok) {\n            throw new Error(`Error: ${response.status} ${response.statusText}`);\n        }\n    } catch (err) {\n        console.log(err);\n        throw new Error(\"Failed to save user information.\");\n    }\n}\n\n//Event listener for select image\nif (imageSelection) {\n    imageSelection.addEventListener(\"change\", () => {\n        const selectedImageUrl = imageSelection.value;\n        imageSelection.value = selectedImageUrl;\n    });\n} else {\n    console.error(\"Image element not found.\");\n}\n\n//Function to get the users\nasync function getUsers(): Promise<UserInfo[]> {\n    try {\n        const response = await fetch(`${baseUrl}users.json`);\n        if (!response.ok) {\n            throw new Error(`Error: ${response.status} ${response.statusText}`);\n        }\n        const users: FirebaseResponse | null = await response.json();\n        if (!users) {\n\n            return [];\n        }\n\n        const usersArray: UserInfo[] = Object.values(users);\n\n        return usersArray;\n\n    } catch (err) {\n\n        throw new Error(\"Failed to fetch users\");\n    }\n}\n\n// Event listener for the \"create account\" button\nif (createAccountButton && usernameInput && passwordInput) {\n    createAccountButton.addEventListener(\"click\", async () => {\n        userDeletedSuccessfully.textContent = \" \";\n        errorMessage.innerText = \" \";\n        const userName = usernameInput.value;\n        const password = passwordInput.value;\n\n        if (!userName || !password) {\n            errorMessage.textContent = \"Username and / or password cannot be empty.\";\n            errorMessage.style.color = \"red\";\n            createAccountButton.insertAdjacentElement(\"afterend\", errorMessage);\n            return;\n        }\n\n        //check if username is available\n        const isAvailable = await isUsernameAvailable(userName);\n        if (!isAvailable) {\n            errorMessage.textContent = \"Username is already taken. Please choose another one.\";\n            errorMessage.style.color = \"red\";\n            createAccountButton.insertAdjacentElement(\"afterend\", errorMessage);\n            return;\n        }\n        accountCreated.textContent = \"Your account has been successfully created! Now  you can log in with your new account.\";\n        accountCreated.style.color = \"green\";\n        \n        const userInfo: UserInfo = {\n            userName: userName,\n            password: password,\n            status: \"\",\n            imageurl: imageSelection?.value ?? \"\",\n            newUser: true,\n            createdAt: new Date().toISOString()\n        };\n\n        await saveUser(userInfo);\n    });\n} else {\n    console.error(\"Cant finnd one or more elements\");\n}\n\n//control username checks if there's any user in the array with same username \nasync function isUsernameAvailable(username: string): Promise<boolean> {\n    const users = await getUsers();\n    return !users.some((user) => user.userName === username);\n}\n\n// Displaying logged in users\nfunction displayLoggedInUsers(users: UserInfo[]): void {\n    let arr: UserInfo[] = []\n\n     Object.values(users).forEach((user) => arr.push(user))\n\n    let newArr = arr.sort((a, b) => {\n          {return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()}\n    })\n\n    if (!loggedInUsersList) {\n        console.error(\"Logged-in users list not found.\");\n        return;\n    }\n\n    loggedInUsersList.innerHTML = \"\";\n    //loop.......................\n    //loginpage.inside\n    newArr.forEach((user: UserInfo, i) => {\n        Object.values(user.status).forEach((status) => {\n            if (!user.newUser) {\n                    const listItem = document.createElement(\"li\");\n                    listItem.textContent = `${user.userName}s Status: ${status}`;\n                    loggedInUsersList.appendChild(listItem);\n                    body.style.backgroundColor = \"#ccc\";\n        \n                    // Create an img element in profile user picture which is in the list in log in page\n                    const userImage = document.createElement(\"img\");\n                    userImage.src = user.imageurl;\n                    userImage.style.width = \"50px\";\n                    userImage.style.height = \"50px\";\n                    userImage.style.borderRadius = \"5rem\";\n                    listItem.appendChild(userImage);\n\n                    // Event listener to the list \n                    listItem.addEventListener(\"click\", () => {\n                        console.log(user)\n                        document.body.innerHTML = \"\";\n                        loginfield!.style.display =\"none\";\n                        // // form!.style.display = \"none\";\n                        const usersPage = document.createElement('div');\n                        usersPage.innerHTML = `<h2>Welcome to ${user.userName}'s page! </br> Status: ${Object.values(user.status)}</h2>`;\n                        document.body.appendChild(usersPage);\n                        body.style.backgroundColor = \"yellow\";\n                        body.style.color = \"#333\";\n                        body.style.textAlign =\"center\";\n        \n                         // Create an img element in visiting user page\n                        const userImage = document.createElement(\"img\");\n                        userImage.src = user.imageurl;\n                        userImage.style.width = \"90px\";\n                        userImage.style.height = \"90px\";\n                        userImage.style.borderRadius = \"5rem\";\n                        usersPage.appendChild(userImage);\n        \n                        //Log out button to log out user and take user back to login page \n                        const logOutButton = document.createElement('button');\n                        logOutButton.textContent = \"Log Out\";\n                        logOutButton.style.textAlign = \"center\";\n                        logOutButton.style.backgroundColor = \"#333\";\n                        logOutButton.style.color = \"white\";\n                        logOutButton.style.padding = \"10px\";\n                        logOutButton.style.margin = \"10px\";\n                        document.body.appendChild(logOutButton);\n\n                        logOutButton.addEventListener(\"click\", backToMainPage);\n                        \n                        function backToMainPage() {\n                        \n                            window.location.href = \"./index.html\";\n                        }\n                    })\n                }\n            \n        })\n    \n    })\n}\n\nif (logInButton && usernameInput && passwordInput) {\n    logInButton.addEventListener(\"click\", async (event: MouseEvent) => {\n        event.preventDefault();\n        accountCreated.textContent = \" \";\n        userDeletedSuccessfully.textContent = \" \";\n        document.body.style.alignContent = \"center\";\n        errorMessage.textContent = \" \";\n        const password = passwordInput.value;\n        const users = await getUsers();\n        const user = users.find((u) => u.userName === usernameInput.value);\n        errorMessage.textContent = \"The account has been Successfully logged in! \";\n        \n        //if no user is found\n        if (!user) {\n            errorMessage.textContent = \"There is no account found for this user. Please create an account first.\";\n            errorMessage.style.color = \"red\";\n            form?.appendChild(errorMessage);\n            return;\n        }\n        //password check\n        if (user.password !== password) {\n            errorMessage.textContent = \"Incorrect password. Please try again.\";\n            errorMessage.style.color = \"red\";\n            form?.appendChild(errorMessage);\n            return;\n        }\n\n        // Update the user's status\n        user.newUser = false;\n        await saveUser(user);\n\n        // Display logged-in users\n        displayLoggedInUsers(await getUsers());\n\n        logInpage.innerHTML = `<h1>Welcome ${usernameInput.value}!</h1> `;\n        loginfield!.style.display =\"none\";\n        const userImage = document.createElement(\"img\");\n            userImage.src = user.imageurl;\n            userImage.style.width = \"200px\";\n            userImage.style.height = \"30%\";\n            userImage.style.borderRadius = \"5rem\";\n            logInpage.appendChild(userImage);\n        logInpage.style.textAlign = \"center\";\n\n        //status\n        const statuslabel = document.createElement(\"p\");\n        logInpage.appendChild(statuslabel);\n        statuslabel.textContent =\" Write your status here:\";\n        logInpage.appendChild(statusInput);\n        logInpage.appendChild(loggedInUsersList!)\n        loggedInUsersList!.style.display = \"block\";\n        statusInput.style.display = \"block\";\n        statusInput.value = \"\";\n        statusInput.id = \"status\";\n        statusInput.classList.add('status-input');\n        \n        //create button to post the status to the user in the list/firebase\n        const postStatusButton = document.createElement('button');\n        postStatusButton.innerText = \"Post Status\";\n        logInpage.appendChild(postStatusButton);\n        postStatusButton.classList.add('post-status-button');\n        \n        //Eventlistener to post the status to the user\n        postStatusButton.addEventListener(\"click\", async () => {\n            const status = statusInput.value;\n        \n            const url = `${baseUrl}users/${user.userName}/status.json`;\n            const init = {\n                method: \"POST\",\n                body: JSON.stringify(status),\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\",\n                },\n            };\n            try {\n                const response = await fetch(url, init);\n\n                if (!response.ok) {\n                    throw new Error(`Error: ${response.status} ${response.statusText}`);\n                }\n            } catch (err) {\n                console.log(err);\n                throw new Error(\"Failed to save user information.\");\n            }\n\n            // Display logged-in users\n            displayLoggedInUsers(await getUsers());\n            statusInput.value = \"\";\n        });\n\n         //create button to delete user \n        const deleteUserButton = document.createElement('button');\n        deleteUserButton.innerText = \"Delete User\";\n        deleteUserButton.style.textAlign = \"center\";\n        deleteUserButton.style.backgroundColor =\"rgb(203, 58, 58)\";\n        deleteUserButton.style.margin = \"10px\";\n        deleteUserButton.style.padding = \"10px\";\n        logInpage.appendChild(deleteUserButton);\n        \n        deleteUserButton?.addEventListener(\"click\", async (event) => {\n            event?.preventDefault();\n            listItem.textContent = \" \";\n            \n            if (usernameInput) {\n                await deleteUser(usernameInput.value);\n                errorMessage.textContent = \" \";\n            } else {\n                console.error(\"Username input element not found.\");\n            }\n        });\n\n        async function deleteUser(username: string): Promise<void> {\n            console.log(\"Deleting user\");\n            const url = `${baseUrl}users/${username}.json`;\n            const init = {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\",\n                },\n            };\n\n            try {\n                const response = await fetch(url, init);\n\n                if (!response.ok) {\n                    throw new Error(`Error: ${response.status} ${response.statusText}`);\n                }\n                console.log(\"User deleted successfully\");\n                userDeletedSuccessfully.textContent = \"This users account has been successfully deleted!\"\n                document.body.appendChild(userDeletedSuccessfully);\n                displayLoggedInUsers(await getUsers());\n\n                //takes away the logged in page and back to the first login page\n                window.location.href = \"./index.html\";\n\n            } catch (err) {\n                console.log(err);\n                failedToDeleteUser.textContent = \"Failed to delete user. Please try again.\";\n                document.body.appendChild(failedToDeleteUser);\n                throw new Error(\"Failed to delete user\");\n            }\n        }\n        //Log out button to log out user and take user back to login page \n         const logOutButton = document.createElement('button');\n         logOutButton.textContent = \"Log Out\";\n         logOutButton.classList.add('logout-button');\n         logInpage.appendChild(logOutButton);\n\n        logOutButton.addEventListener(\"click\", backToMainPage);\n        function backToMainPage() {\n            window.location.href = \"./index.html\"\n        }\n    });\n} else {\n    console.error(\"No element/elements found\");\n}"],"names":["$b4e14b6b8da86996$var$body","document","getElementById","$b4e14b6b8da86996$var$loginfield","$b4e14b6b8da86996$var$form","$b4e14b6b8da86996$var$usernameInput","$b4e14b6b8da86996$var$passwordInput","$b4e14b6b8da86996$var$imageSelection","$b4e14b6b8da86996$var$createAccountButton","$b4e14b6b8da86996$var$logInButton","$b4e14b6b8da86996$var$loggedInUsersList","$b4e14b6b8da86996$var$baseUrl","$b4e14b6b8da86996$var$errorMessage","createElement","$b4e14b6b8da86996$var$userDeletedSuccessfully","$b4e14b6b8da86996$var$failedToDeleteUser","$b4e14b6b8da86996$var$statusInput","$b4e14b6b8da86996$var$listItem","$b4e14b6b8da86996$var$accountCreated","appendChild","$b4e14b6b8da86996$var$logInpage","body","async","$b4e14b6b8da86996$var$saveUser","user","$b4e14b6b8da86996$var$getUsers","url","userName","init","method","JSON","stringify","headers","response","fetch","ok","Error","status","statusText","err","console","log","users","json","Object","values","$b4e14b6b8da86996$var$displayLoggedInUsers","arr","forEach","push","newArr","sort","a","b","Date","createdAt","getTime","innerHTML","i","newUser","listItem","textContent","style","backgroundColor","userImage","src","imageurl","width","height","borderRadius","addEventListener","display","usersPage","color","textAlign","logOutButton","padding","margin","window","location","href","error","selectedImageUrl","value","innerText","password","insertAdjacentElement","username","some","$b4e14b6b8da86996$var$isUsernameAvailable","userInfo","toISOString","event","preventDefault","alignContent","find","u","statuslabel","id","classList","add","postStatusButton","deleteUserButton","deleteUser"],"version":3,"file":"index.9f0c27c4.js.map"}